// <auto-generated />
using System;
using Bluesoft.Bank.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bluesoft.Bank.DataAccess.EF.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20240422215444_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bluesoft.Bank.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("Creation");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Date");

                    b.ToTable("AccountMovements");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovementDailyConsolidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalOperations")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("DailyConsolidations");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovementMonthlyConsolidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalOperations")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("MonthlyConsolidations");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("Name");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FullName");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.DepositDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountMovementId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountMovementId")
                        .IsUnique();

                    b.HasIndex("BranchId");

                    b.HasIndex("Type");

                    b.ToTable("DepositDetails");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.WithdrawalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountMovementId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountMovementId")
                        .IsUnique();

                    b.HasIndex("BranchId");

                    b.HasIndex("Type");

                    b.ToTable("WithdrawalDetails");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Account", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.Branch", "Branch")
                        .WithMany("Accounts")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bluesoft.Bank.Model.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovement", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.Account", "Account")
                        .WithMany("Movements")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovementDailyConsolidation", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.Account", "Account")
                        .WithMany("AccountMovementDailyConsolidations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovementMonthlyConsolidation", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.Account", "Account")
                        .WithMany("AccountMovementMonthlyConsolidations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Branch", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Client", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.User", "User")
                        .WithOne("Client")
                        .HasForeignKey("Bluesoft.Bank.Model.Client", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.DepositDetails", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.AccountMovement", "AccountMovement")
                        .WithOne("DepositDetails")
                        .HasForeignKey("Bluesoft.Bank.Model.DepositDetails", "AccountMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bluesoft.Bank.Model.Branch", "Branch")
                        .WithMany("DepositDetails")
                        .HasForeignKey("BranchId");

                    b.Navigation("AccountMovement");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.WithdrawalDetails", b =>
                {
                    b.HasOne("Bluesoft.Bank.Model.AccountMovement", "AccountMovement")
                        .WithOne("WithdrawalDetails")
                        .HasForeignKey("Bluesoft.Bank.Model.WithdrawalDetails", "AccountMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bluesoft.Bank.Model.Branch", "Branch")
                        .WithMany("WithdrawalDetails")
                        .HasForeignKey("BranchId");

                    b.Navigation("AccountMovement");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Account", b =>
                {
                    b.Navigation("AccountMovementDailyConsolidations");

                    b.Navigation("AccountMovementMonthlyConsolidations");

                    b.Navigation("Movements");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.AccountMovement", b =>
                {
                    b.Navigation("DepositDetails");

                    b.Navigation("WithdrawalDetails");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Branch", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("DepositDetails");

                    b.Navigation("WithdrawalDetails");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.City", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.Client", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Bluesoft.Bank.Model.User", b =>
                {
                    b.Navigation("Client")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
